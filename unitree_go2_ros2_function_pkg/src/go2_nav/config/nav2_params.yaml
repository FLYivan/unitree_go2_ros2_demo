explore_node:
  ros__parameters:
    robot_base_frame: base
    return_to_init: true
    costmap_topic: /global_costmap/costmap
    costmap_updates_topic: /global_costmap/costmap_updates
    visualize: true
    planner_frequency: 0.2
    progress_timeout: 30.0
    potential_scale: 5.0        # 用于对边界进行加权。较大的 potential_scale_ 值会使得距离对成本的影响更大。
    orientation_scale: 0.5
    gain_scale: 1.0             # 用于对边界进行加权。较大的 gain_scale_ 值会使得前沿的大小对成本的影响更大。
                                # 较大的前沿通常意味着更多的未知区域可以被探索，因此在成本计算中，前沿越大，成本越低。
    transform_tolerance: 0.1    # 在调用TF（变换）库的transform函数时，作为一个时间容差参数传递。以便在获取变换时能够成功匹配到合适的时间戳。
    min_frontier_size: 0.6      # 将边界视为勘探目标的最小边界尺寸。数值单位为米。



amcl:
  ros__parameters:
    use_sim_time: True
    alpha1: 0.2
    alpha2: 0.2
    alpha3: 0.2
    alpha4: 0.2
    alpha5: 0.2
    base_frame_id: "base"
    beam_skip_distance: 0.5
    beam_skip_error_threshold: 0.9
    beam_skip_threshold: 0.3
    do_beamskip: false
    # global_frame_id: "map_slamtoolbox"              # mapfind
    global_frame_id: "map"              # mapfind   
    lambda_short: 0.1
    laser_likelihood_max_dist: 2.0
    laser_max_range: 100.0
    laser_min_range: -1.0
    laser_model_type: "likelihood_field"
    max_beams: 60
    max_particles: 2000
    min_particles: 500
    odom_frame_id: "odom_slamtoolbox"
    pf_err: 0.05
    pf_z: 0.99
    recovery_alpha_fast: 0.0
    recovery_alpha_slow: 0.0
    resample_interval: 1
    robot_model_type: "nav2_amcl::DifferentialMotionModel"
    save_pose_rate: 0.5
    sigma_hit: 0.2
    tf_broadcast: true
    transform_tolerance: 1.0
    update_min_a: 0.2
    update_min_d: 0.25
    z_hit: 0.5
    z_max: 0.05
    z_rand: 0.5
    z_short: 0.05
    scan_topic: scan

bt_navigator:
  ros__parameters:
    use_sim_time: True
    # global_frame: map_slamtoolbox               # mapfind
    global_frame: map 
    robot_base_frame: base
    odom_topic: /lio_sam_ros2/dogOdomProcess/DogOdomGlobal
    bt_loop_duration: 10
    default_server_timeout: 20
    wait_for_service_timeout: 1000
    # 'default_nav_through_poses_bt_xml' and 'default_nav_to_pose_bt_xml' are use defaults:
    # nav2_bt_navigator/navigate_to_pose_w_replanning_and_recovery.xml
    # nav2_bt_navigator/navigate_through_poses_w_replanning_and_recovery.xml
    # They can be set here or via a RewrittenYaml remap from a parent launch file to Nav2.
    plugin_lib_names:
      - nav2_compute_path_to_pose_action_bt_node
      - nav2_compute_path_through_poses_action_bt_node
      - nav2_smooth_path_action_bt_node
      - nav2_follow_path_action_bt_node
      - nav2_spin_action_bt_node
      - nav2_wait_action_bt_node
      - nav2_assisted_teleop_action_bt_node
      - nav2_back_up_action_bt_node
      - nav2_drive_on_heading_bt_node
      - nav2_clear_costmap_service_bt_node
      - nav2_is_stuck_condition_bt_node
      - nav2_goal_reached_condition_bt_node
      - nav2_goal_updated_condition_bt_node
      - nav2_globally_updated_goal_condition_bt_node
      - nav2_is_path_valid_condition_bt_node
      - nav2_initial_pose_received_condition_bt_node
      - nav2_reinitialize_global_localization_service_bt_node
      - nav2_rate_controller_bt_node
      - nav2_distance_controller_bt_node
      - nav2_speed_controller_bt_node
      - nav2_truncate_path_action_bt_node
      - nav2_truncate_path_local_action_bt_node
      - nav2_goal_updater_node_bt_node
      - nav2_recovery_node_bt_node
      - nav2_pipeline_sequence_bt_node
      - nav2_round_robin_node_bt_node
      - nav2_transform_available_condition_bt_node
      - nav2_time_expired_condition_bt_node
      - nav2_path_expiring_timer_condition
      - nav2_distance_traveled_condition_bt_node
      - nav2_single_trigger_bt_node
      - nav2_goal_updated_controller_bt_node
      - nav2_is_battery_low_condition_bt_node
      - nav2_navigate_through_poses_action_bt_node
      - nav2_navigate_to_pose_action_bt_node
      - nav2_remove_passed_goals_action_bt_node
      - nav2_planner_selector_bt_node
      - nav2_controller_selector_bt_node
      - nav2_goal_checker_selector_bt_node
      - nav2_controller_cancel_bt_node
      - nav2_path_longer_on_approach_bt_node
      - nav2_wait_cancel_bt_node
      - nav2_spin_cancel_bt_node
      - nav2_back_up_cancel_bt_node
      - nav2_assisted_teleop_cancel_bt_node
      - nav2_drive_on_heading_cancel_bt_node
      - nav2_is_battery_charging_condition_bt_node

bt_navigator_navigate_through_poses_rclcpp_node:
  ros__parameters:
    use_sim_time: True

bt_navigator_navigate_to_pose_rclcpp_node:
  ros__parameters:
    use_sim_time: True

controller_server:
  ros__parameters:
    use_sim_time: True
    controller_frequency: 20.0
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.001
    failure_tolerance: 0.3
    progress_checker_plugin: "progress_checker"
    goal_checker_plugins: ["general_goal_checker"] # "precise_goal_checker"
    controller_plugins: ["FollowPath"]

    # Progress checker parameters
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 10.0
    # Goal checker parameters
    #precise_goal_checker:
    #  plugin: "nav2_controller::SimpleGoalChecker"
    #  xy_goal_tolerance: 0.25
    #  yaw_goal_tolerance: 0.25
    #  stateful: True
    general_goal_checker:
      stateful: True
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.25
      yaw_goal_tolerance: 0.25
    # DWB parameters
    FollowPath:
      plugin: "dwb_core::DWBLocalPlanner"
      debug_trajectory_details: True
      min_vel_x: 0.0
      min_vel_y: 0.0
      max_vel_x: 0.26
      max_vel_y: 0.0
      max_vel_theta: 1.0
      min_speed_xy: 0.0
      max_speed_xy: 0.26
      min_speed_theta: 0.0
      # Add high threshold velocity for turtlebot 3 issue.
      # https://github.com/ROBOTIS-GIT/turtlebot3_simulations/issues/75
      acc_lim_x: 2.5
      acc_lim_y: 0.0
      acc_lim_theta: 3.2
      decel_lim_x: -2.5
      decel_lim_y: 0.0
      decel_lim_theta: -3.2
      vx_samples: 20
      vy_samples: 5
      vtheta_samples: 20
      sim_time: 1.7
      linear_granularity: 0.05
      angular_granularity: 0.025
      transform_tolerance: 0.2
      xy_goal_tolerance: 0.25
      trans_stopped_velocity: 0.25
      short_circuit_trajectory_evaluation: True
      stateful: True
      critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]
      BaseObstacle.scale: 0.02
      PathAlign.scale: 32.0
      PathAlign.forward_point_distance: 0.1
      GoalAlign.scale: 24.0
      GoalAlign.forward_point_distance: 0.1
      PathDist.scale: 32.0
      GoalDist.scale: 24.0
      RotateToGoal.scale: 32.0
      RotateToGoal.slowing_factor: 5.0
      RotateToGoal.lookahead_time: -1.0

local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 5.0
      publish_frequency: 2.0
      global_frame: odom_slamtoolbox
      robot_base_frame: base
      use_sim_time: True
      rolling_window: true
      width: 3
      height: 3
      resolution: 0.05
      # footprint: "[[-0.4, -0.15], [0.3, -0.15], [0.3, -0.07], [0.4, -0.07], [0.4, 0.07], [0.3, 0.07], [0.3, 0.15], [-0.4, 0.15]]"   # 与圆形机器人不同
      # footprint_padding: 0.03   # 额外填充距离，确保安全
      robot_radius: 0.2                         # 参数不要动（通常半径0.4,进门半径只能0.2）
      plugins: ["voxel_layer", "inflation_layer"]
      # plugins: ["static_layer", "voxel_layer", "inflation_layer"]
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        enabled: True
        cost_scaling_factor: 3.0
        inflation_radius: 0.25                # 参数不要动（通常半径0.4,进门半径只能0.2）
      voxel_layer:
        plugin: "nav2_costmap_2d::VoxelLayer"
        enabled: True
        publish_voxel_map: True
        origin_z: -0.2
        z_resolution: 0.05
        z_voxels: 16
        max_obstacle_height: 2.0
        mark_threshold: 0
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 90.5         # 射线追踪最大范围
          raytrace_min_range: 0.3         # 射线追踪最小范围
          obstacle_max_range: 90.0       # 障碍物最大范围
          obstacle_min_range: 0.3         # 障碍物最小范围
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        enabled: True
        map_subscribe_transient_local: True
      always_send_full_costmap: True

global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 1.0
      publish_frequency: 1.0
      # global_frame: map_slamtoolbox               # mapfind
      global_frame: map
      robot_base_frame: base
      use_sim_time: True
      robot_radius: 0.2                           # 参数不要动
      resolution: 0.05
      # footprint: "[[-0.4, -0.15], [0.3, -0.15], [0.3, -0.07], [0.4, -0.07], [0.4, 0.07], [0.3, 0.07], [0.3, 0.15], [-0.4, 0.15]]"  # 与圆形机器人不同
      # footprint_padding: 0.03   # 额外填充距离，确保安全
      track_unknown_space: true
      plugins: ["static_layer", "obstacle_layer", "inflation_layer"]
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 90.5         # 射线追踪最大范围
          raytrace_min_range: 0.3         # 射线追踪最小范围
          obstacle_max_range: 90.0         # 检测到障碍物最大范围（这个参数是否跟地图障碍物标记有关）
          obstacle_min_range: 0.3         # 障碍物最小范围，小于这个范围的被忽略，路由器问题解决
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        enabled: True
        map_subscribe_transient_local: True
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        enabled: True                         # 启用膨胀层
        cost_scaling_factor: 3.0
        inflation_radius: 0.25                # 参数不要动
      always_send_full_costmap: True

map_server:
  ros__parameters:
    use_sim_time: True
    # Overridden in launch by the "map" launch configuration or provided default value.
    # To use in yaml, remove the default "map" value in the tb3_simulation_launch.py file & provide full path to map below.
    yaml_filename: ""
    # topic_name: "map_amcl"            # 由于amcl订阅的map话题名写死为/map，所以这里不能调整参数  
    # frame_id: "map_slamtoolbox"         # acml模式下，map_server发布的map话题坐标id要和acml订阅的一致 mapfind
    frame_id: "map" 

map_saver:
  ros__parameters:
    use_sim_time: True
    save_map_timeout: 5.0
    free_thresh_default: 0.25
    occupied_thresh_default: 0.65
    map_subscribe_transient_local: True

planner_server:
  ros__parameters:
    expected_planner_frequency: 20.0
    use_sim_time: True
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"
      tolerance: 0.2
      use_astar: false
      allow_unknown: true

      # plugin: "nav2_smac_planner/SmacPlannerHybrid"
      # downsample_costmap: false           # 是否对地图进行下采样
      # downsampling_factor: 1              # 代价地图层分辨率的倍数（例如，在5cm的代价地图上设置为2将变为10cm）
      # tolerance: 0.25                     # 如果无法找到精确的目标，作为有效容忍度终点的距离-目标启发式代价（距离）
      # allow_unknown: true                 # 允许在未知空间中行驶
      # max_iterations: 1000000             # 在失败（如果无法到达）之前搜索的最大总迭代次数，设置为-1以禁用
      # max_on_approach_iterations: 1000    # 在达到容忍度范围内后继续尝试找到精确解决方案的最大迭代次数
      # max_planning_time: 5.0              # 规划器规划和平滑的最大时间（秒）
      # motion_model_for_search: "REEDS_SHEPP"    # Hybrid-A* Dubin, Redds-Shepp
      # angle_quantization_bins: 72         # 搜索的角度量化箱数量
      # analytic_expansion_ratio: 3.5       # 在搜索最终接近时尝试分析扩展的比例
      # analytic_expansion_max_length: 3.0  # 对于Hybrid/Lattice节点：分析扩展被认为有效的最大长度，以防止不安全的捷径
      # minimum_turning_radius: 0.40        # 路径/车辆的最小转弯半径（米）
      # reverse_penalty: 2.0                # 如果运动是倒车，应用的惩罚，必须 >= 1
      # change_penalty: 0.0                 # 如果运动改变方向（左到右），应用的惩罚，必须 >= 0
      # non_straight_penalty: 1.2           # 如果运动不是直线，应用的惩罚，必须 >= 1
      # cost_penalty: 2.0                   # 在将障碍物地图动态规划距离扩展启发式添加到障碍地图时应用的惩罚。这会驱动机器人更靠近通道的中心。合理的值在1.3 - 3.5之间。
      # retrospective_penalty: 0.015
      # lookup_table_size: 20.0             # 缓存的dubin/reeds-sheep距离窗口的大小，以米为单位。
      # cache_obstacle_heuristic: false     # 在同一目标位置的后续重新规划之间缓存障碍物地图动态规划距离扩展启发式。如果代价地图基本上是静态的，这会显著加快重新规划性能（40倍）。
      # viz_expansions: false               # 对于Hybrid节点：是否在/expansions话题上发布扩展作为姿态数组（方向没有意义）。警告：计算和显示都很重，仅用于调试，因为它会降低性能。
      # smooth_path: True                   # 如果为true，则对路径进行简单快速的平滑后处理
      # smoother:
      #   max_iterations: 1000
      #   w_smooth: 0.3
      #   w_data: 0.2
      #   tolerance: 1.0e-10
      #   do_refinement: true
      #   refinement_num: 2

smoother_server:
  ros__parameters:
    use_sim_time: True
    smoother_plugins: ["simple_smoother"]
    simple_smoother:
      plugin: "nav2_smoother::SimpleSmoother"
      tolerance: 1.0e-10
      max_its: 1000
      do_refinement: True

behavior_server:
  ros__parameters:
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 10.0
    behavior_plugins: ["spin", "backup", "drive_on_heading", "assisted_teleop", "wait"]
    spin:
      plugin: "nav2_behaviors/Spin"
    backup:
      plugin: "nav2_behaviors/BackUp"
    drive_on_heading:
      plugin: "nav2_behaviors/DriveOnHeading"
    wait:
      plugin: "nav2_behaviors/Wait"
    assisted_teleop:
      plugin: "nav2_behaviors/AssistedTeleop"
    global_frame: odom_slamtoolbox
    robot_base_frame: base
    transform_tolerance: 0.1
    use_sim_time: true
    simulate_ahead_time: 2.0
    max_rotational_vel: 1.0
    min_rotational_vel: 0.4
    rotational_acc_lim: 3.2

robot_state_publisher:
  ros__parameters:
    use_sim_time: True

waypoint_follower:
  ros__parameters:
    use_sim_time: True
    loop_rate: 20
    stop_on_failure: false
    waypoint_task_executor_plugin: "wait_at_waypoint"
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: True
      waypoint_pause_duration: 200

velocity_smoother:
  ros__parameters:
    use_sim_time: True
    smoothing_frequency: 20.0
    scale_velocities: False
    feedback: "OPEN_LOOP"
    max_velocity: [0.26, 0.0, 1.0]
    min_velocity: [-0.26, 0.0, -1.0]
    max_accel: [2.5, 0.0, 3.2]
    max_decel: [-2.5, 0.0, -3.2]
    odom_topic: "lio_sam_ros2/dogOdomProcess/DogOdomGlobal"
    odom_duration: 0.1
    deadband_velocity: [0.0, 0.0, 0.0]
    velocity_timeout: 1.0
